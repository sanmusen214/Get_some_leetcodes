class Solution:
    def triangleNumber(self, nums):
        nums.sort()
        res = 0
        # i不动，r向左试探，l向右逼近
        for i in range(len(nums) - 1, 1, -1):
            l = 0
            r = i-1
            while l < r:
                # 只要较小的两个值之和大于最大的值，则一定可组成三角形，如果当前可组，l从l到r-1也可组
                if nums[l] + nums[r] > nums[i]:
                    #l到r-1,r,i可组成三角形，个数为 (r-1) - l + 1 = r - l
                    res += (r-1) - l + 1
                    r -= 1
                else: l += 1
        return res
    
a=Solution()
print(a.triangleNumber([548,198,555,924,481,726,810,950,272,119,478,992,20,266,752,736,720,500,384,62,858,149,126,207,544,858,145,968,533,483,78,522,779,809,66,787,767,503,317,2,802,693,248,667,255,613,574,474,53,565,755,562,360,194,85,754,686,1,989,447,438,265,621,854,286,748,174,492,940,198,733,208,164,658,711,546,840,460,5,535,538,1,908,237,426,924,977,29,378,115,105,359,341,792,32,289,486,149,968,620,310,888,754,80,843,684,191,822,826,392,353,660,326,167,16,866,153,140,111,488,198,776,612,26,580,549,797,353,400,125,702,455,99,516,320,211,709,725,527,305,425,964,487,580,208,948,581,770,513,557,720,229,767,397,137,257,3,148,815,984,218,650,219,521,886,299,871,698,559,544,904,761,245,414,739,442,422,443,185,450,639,872,713,644,264,919,961,314,51,960,130,914,810,298,420,337,187,418,368,964,342,254,435,221,390,586,469,872,722,10,667,356,948,598,557,203,71,33,503,805,620,668,197,646,635,107,536,155,256,695,648,518,842,687,195,982,87,922,407,269,764,722,436,765,715,585,864,443,848,289,33,523,75,74,609,577,241,780,417,506,462,716,70,565,69,628,966,36,101,194,829,498,358,636,360,1000,131,521,868,184,819,797,528,607,331,804,467,912,580,199,328,811,458,175,122,332,345,774,999,238,120,880,735,760,505,857,660,985,412,334,459,259,876,40,680,445,674,361,4,658,631,244,734,254,550,420,263,733,991,433,355,882,361,342,993,647,864,90,742,769,815,373,507,845,520,70,765,927,266,420,781,762,820,267,471,93,963,325,125,619,143,175,699,278,847,147,898,254,125,422,394,375,619,807,276,182,730,932,948,568,306,696,14,349,527,77,420,374,801,676,781,674,36,105,883,267,145,976,365,184,97,949,486,794,169,750,901,407,762,419,173,23,934,171,968,6,207,906,399,424,818,427,792,583,92,980,189,860,872,153,738,806,859,434,505,674,269,684,783,511,56,474,439,776,357,278,747,144,892,206,103,404,94,369,21,66,971,113,943,497,807,58,61,600,479,722,507,445,933,4,986,368,963,728,542,657,992,431,503,153,493,655,821,733,638,984,159,661,295,558,732,411,347,483,573,666,271,872,327,470,717,903,493,754,592,614,495,529,553,584,963,963,991,937,755,106,849,913,911,981,858,409,579,447,782,799,636,57,182,20,806,634,469,298,238,355,982,216,445,97,455,961,668,255,840,347,533,2,484,758,284,393,732,418,957,572,489,733,256,90,255,12,681,723,652,479,266,126,155,513,74,935,655,720,660,493,780,667,752,241,603,617,996,762,142,914,859,210,408,397,486,197,750,212,336,229,413,761,814,566,748,523,592,297,398,710,200,838,436,993,794,724,789,637,308,521,232,41,447,904,482,835,274,268,695,997,465,855,876,583,444,906,470,977,683,120,700,869,937,942,185,271,747,688,471,973,936,720,91,856,686,711,874,451,423,401,297,584,347,563,153,184,298,835,462,861,215,111,848,158,975,200,535,163,507,838,654,12,335,331,227,871,888,400,780,683,181,688,320,607,469,539,389,992,809,637,21,633,389,850,715,609,900,457,334,325,425,944,212,375,736,804,996,78,862,767,976,264,980,3,326,453,323,396,131,789,906,624,944,522,471,172,24,816,408,956,248,364,925,860,753,644,559,291,562,909,990,369,365,100,605,46,700,682,89,389,212,124,423,929,889,927,677,982,185,236,982,312,630,941,500,527,551,910,451,861,771,330,971,435,14,416,846,975,663,107,993,69,524,1,439,66,815,296,991,362,535,906,488,686,642,252,932,689,845,857,478,404,974,274,736,964,31,866,849,307,759,307,998,477,272,555,835,64,166,786,8,750,491,631,606,188,626,866,966,139,322,536,628,961,903,10,565,873,224,45,809,908,609,506,272,248,83,762,158,839,507,831,872,937,766,704,78,989,925,850,360,728,656,691,203,84,788,662,696,733,211,52,421,383,711,962,136,940,539,876,502,106,549,553,380,28,215,435,638,306,431,123,659,77,819,989,336,542,755,664,140,196,143,972,320,2,13,679,352,952,228,605,399,347,281,26,585,766,698,31,79,452,894,881,558,155,246,739,136,581,869,693,844,808,250,339,521,210,347,32,927,974,393,966,547,317,375,798,356,435,254,100,393,575,782,526,479,746,550,866,518,864,209,832,71,902,666,695]))#79734256
print(a.triangleNumber([2,2,3,4]))#35